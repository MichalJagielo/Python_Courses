# -*- coding: utf-8 -*-
"""BitPeak_Zadanie #2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yv5If-NMtofUEBKXsZkScxxqkCGkCgC9
"""

# Zadanie #2 --> 2.1, 2.2
import sqlite3
import pandas as pd
import datetime
import csv

url = 'https://bitpeak.pl/datasets/flightlegs.csv'
df = pd.read_csv(url, sep=';')

"""I prepared the data to insert into a table"""
df.rename(columns=({'index':'id','tailNumber':'tailNumber','source_airport_code':'sourceAirportCode','source_country_code':'sourceCountryCode',
                    'destination_airport_code':'destinationAirportCode','destination_country_code':'destinationCountryCode',
                    'departure_time':'departureTimeUtc', 'landing_time':'landingTimeUtc'}),inplace=True,)

"""Create and connect to new database"""
conn = sqlite3.connect("bt2.db")

"""Create table FlightLeg"""
conn.execute("""DROP TABLE IF EXISTS FlightLeg;""")
sql_table = """CREATE TABLE IF NOT EXISTS FlightLeg(id INTEGER PRIMARY KEY AUTOINCREMENT,tailNumber VARCHAR(8),
sourceAirportCode VARCHAR(5), destinationAirportCode VARCHAR(5),sourceCountryCode VARCHAR(5),
destinationCountryCode VARCHAR(5),departureTimeUtc TIMESTAMP, landingTimeUtc TIMESTAMP);"""
conn.execute(sql_table)
print("table created")
conn.commit()
df.to_sql(name='FlightLeg', con=conn, if_exists='append', index=False)
conn.commit()

"""I tried insert values in the way below (in different ways) but always received errors"""
# for row in df.itertuples():
#     conn.execute("""INSERT INTO FlightLeg (tailNumber, sourceAirportCode, destinationAirportCode, 
#     sourceCountryCode, destinationCountryCode, departureTimeUtc, landingTimeUtc) 
#     VALUES ('{row[1]}','{row[2]}','{row[3]}','{row[4]}','{row[5]}','{row[6]}','{row[7]}');""")
# conn.commit()

# Zadanie#2.3
cursor = conn.execute("ALTER TABLE FlightLeg ADD COLUMN flightType VARCHAR(3);")
conn.commit()

# Zadanie#2.3
cursor = conn.execute("""UPDATE FlightLeg SET flightType = 'D' 
                        WHERE sourceCountryCode = destinationCountryCode;""")
conn.commit()

# Zadanie#2.3
cursor = conn.execute("""UPDATE FlightLeg SET flightType = 'I' 
                    WHERE sourceCountryCode <> destinationCountryCode;""")
conn.commit()

# Zadanie#2.3
cursor = conn.execute("ALTER TABLE FlightLeg ADD COLUMN flightDuration REAL;")
conn.commit()

# Zadanie#2.3
cursor = conn.execute("""
UPDATE FlightLeg SET 
flightDuration = round((strftime('%s',landingTimeUtc) - strftime('%s',departureTimeUtc))/60,0);""")
conn.commit()

# Zadanie #4.1
cursor = conn.execute("""SELECT tailNumber, COUNT(*) 
                        FROM FlightLeg 
                        GROUP BY tailNumber 
                        ORDER BY COUNT(*) DESC 
                        LIMIT 3;""")
for row in cursor:
    print(row)

# Zadanie#4.2
cursor = conn.execute("""SELECT sum(flightDuration) as total_flight_time_inMinutes, tailNumber
                    FROM FlightLeg 
                    GROUP BY tailNumber 
                    ORDER BY  total_flight_time_inMinutes DESC 
                    LIMIT 3;""")
for row in cursor:
    print(row)

# Zadanie#4.3
cursor = conn.execute("""SELECT max(flightDuration), flightType, tailNumber
                    FROM FlightLeg
                    where flightType = 'D';""")
print("max flightDuration in Domestic flightType")
for row in cursor:
    print(row)

cursor = conn.execute("""SELECT min(flightDuration), flightType, tailNumber
                    FROM FlightLeg
                    where flightType = 'D';""")
print("min flightDuration in Domestic flightType")
for row in cursor:
    print(row)

cursor = conn.execute("""SELECT max(flightDuration), flightType, tailNumber
                    FROM FlightLeg
                    where flightType = 'I';""")
print("max flightDuration in International flightType")
for row in cursor:
    print(row)

cursor = conn.execute("""SELECT min(flightDuration), flightType, tailNumber
                    FROM FlightLeg
                    where flightType = 'I';""")
print("min flightDuration in International flightType")
for row in cursor:
    print(row)

# Zadanie#4.4
"""No more time"""

# Zadanie#4.5
cursor = conn.execute("""SELECT a.id, b.id, a.tailNumber, b.tailNumber, a.departureTimeUtc, b.departureTimeUtc,  
    min((strftime('%s',b.departureTimeUtc) - strftime('%s',a.departureTimeUtc))/60) as differenceBetweenStartMin
    FROM FlightLeg a, FlightLeg b
    WHERE a.tailNumber = b.tailNumber and (a.departureTimeUtc < b.departureTimeUtc) and 
    a.flightType = 'D' and b.flightType = 'D';""")

for row in cursor:
    print(row)

